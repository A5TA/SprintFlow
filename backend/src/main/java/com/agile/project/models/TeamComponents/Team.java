package com.agile.project.models.TeamComponents;

import com.agile.project.models.ProjectComponents.Project;
import com.agile.project.models.UserComponents.User;
import jakarta.persistence.*;
import lombok.*;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

@Data //Generates Getters and Setters
@Builder //Useful for Builder Design pattern
@NoArgsConstructor //makes the no argument constructor
@AllArgsConstructor // makes the all arguments constructor with the id,firstname...
@Entity
public class Team {
    @Id
    @GeneratedValue(strategy = GenerationType.AUTO) //Makes it so that the id is autogenerated, using Auto makes the hibernate make the best decision for us
    private Integer id;
    @Column(unique = true, nullable = false)
    private String name;

    //Many to many tutorial - https://medium.com/@arijit83work/manytomany-relationship-in-spring-boot-with-hibernate-and-jpa-35d7b4fdf3bf
    @ManyToMany(mappedBy = "teams", fetch = FetchType.LAZY, cascade = CascadeType.ALL)
    private Set<User> users;

    @OneToMany(mappedBy = "team", cascade = CascadeType.ALL)
    private List<Project> projects = new ArrayList<Project>();
}
